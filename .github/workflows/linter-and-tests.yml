# This workflow will install Python dependencies, run lint, and run tests with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python Car Insurance Data Generator

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      # Step 1: Cloning the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Installing Python
      - name: Set up Python 3.12
        uses: actions/checkout@v4
        with:
          python-version: "3.12"

      # Step 3: Caching dependencies
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      # Step 4: Install Poetry via the official script
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      # Step 5: Update pip
      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      # Step 6: Installing dependencies
      - name: Install dependencies
        run: poetry install

      # Step 7: Linting with Ruff
      - name: Lint with Ruff
        run: poetry run ruff check .
        continue-on-error: true # Linting doesn't block tests

      # Step 8: Testing with Pytest
      - name: Test with pytest
        run: poetry run pytest tests
